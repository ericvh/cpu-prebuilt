name: Build CPU Binaries

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      create_release:
        description: 'Create a release after building'
        required: false
        default: false
        type: boolean
      release_tag:
        description: 'Release tag (e.g., v1.0.0)'
        required: false
        type: string
  schedule:
    # Run weekly on Sundays at 00:00 UTC to check for new cpu releases
    - cron: '0 0 * * 0'

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'
    
    - name: Clone u-root/cpu repository
      run: |
        git clone https://github.com/u-root/cpu.git
        cd cpu
        echo "CPU_VERSION=$(git describe --tags --always)" >> $GITHUB_ENV
        echo "Building u-root/cpu version: $(git describe --tags --always)"
    
    - name: Install dependencies
      run: |
        cd cpu
        go mod download
    
    - name: Build cpu binary for aarch64
      run: |
        cd cpu
        mkdir -p ../binaries
        echo "Building cpu binary..."
        GOOS=linux GOARCH=arm64 CGO_ENABLED=0 go build -o ../binaries/cpu ./cmds/cpu
        echo "cpu binary built successfully"
        file ../binaries/cpu
    
    - name: Build cpud binary for aarch64
      run: |
        cd cpu
        echo "Building cpud binary..."
        GOOS=linux GOARCH=arm64 CGO_ENABLED=0 go build -o ../binaries/cpud ./cmds/cpud
        echo "cpud binary built successfully"
        file ../binaries/cpud
    
    - name: Verify binaries
      run: |
        echo "Verifying built binaries..."
        ls -la binaries/
        echo "CPU binary info:"
        file binaries/cpu
        echo "CPUD binary info:"
        file binaries/cpud
        echo "Binary sizes:"
        du -h binaries/*
    
    - name: Create build info
      run: |
        cd binaries
        echo "U-Root CPU Binaries for aarch64" > BUILD_INFO.txt
        echo "Built on: $(date -u)" >> BUILD_INFO.txt
        echo "CPU version: $CPU_VERSION" >> BUILD_INFO.txt
        echo "Target architecture: linux/arm64" >> BUILD_INFO.txt
        echo "Go version: $(go version)" >> BUILD_INFO.txt
        echo "" >> BUILD_INFO.txt
        echo "Files in this archive:" >> BUILD_INFO.txt
        echo "- cpu: CPU client binary" >> BUILD_INFO.txt
        echo "- cpud: CPU daemon binary" >> BUILD_INFO.txt
        echo "" >> BUILD_INFO.txt
        echo "Usage:" >> BUILD_INFO.txt
        echo "  ./cpu -h    # Show CPU client help" >> BUILD_INFO.txt
        echo "  ./cpud -h   # Show CPU daemon help" >> BUILD_INFO.txt
        cat BUILD_INFO.txt
    
    - name: Create checksums
      run: |
        cd binaries
        echo "Creating checksums..."
        sha256sum cpu > cpu.sha256
        sha256sum cpud > cpud.sha256
        sha256sum BUILD_INFO.txt > BUILD_INFO.txt.sha256
        echo "Checksums created:"
        cat *.sha256
    
    - name: Create tarball
      run: |
        cd binaries
        tar -czf ../cpu-binaries-aarch64-${{ env.CPU_VERSION }}.tar.gz *
        cd ..
        echo "Tarball created:"
        ls -la cpu-binaries-aarch64-*.tar.gz
        sha256sum cpu-binaries-aarch64-*.tar.gz > cpu-binaries-aarch64-${{ env.CPU_VERSION }}.tar.gz.sha256
    
    - name: Upload binaries as artifact
      uses: actions/upload-artifact@v4
      with:
        name: cpu-binaries-aarch64-${{ env.CPU_VERSION }}
        path: |
          binaries/
          cpu-binaries-aarch64-*.tar.gz
          cpu-binaries-aarch64-*.tar.gz.sha256
        retention-days: 90
    
    - name: Create release (manual or on tag)
      if: startsWith(github.ref, 'refs/tags/') || github.event.inputs.create_release == 'true'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.event.inputs.release_tag || github.ref_name }}
        name: CPU Binaries ${{ github.event.inputs.release_tag || github.ref_name }}
        files: |
          binaries/cpu
          binaries/cpud
          binaries/BUILD_INFO.txt
          binaries/*.sha256
          cpu-binaries-aarch64-*.tar.gz
          cpu-binaries-aarch64-*.tar.gz.sha256
        body: |
          # CPU Binaries for aarch64 (ARM64)
          
          Built from [u-root/cpu](https://github.com/u-root/cpu) version: `${{ env.CPU_VERSION }}`
          
          ## Files
          
          ### Individual Binaries
          - `cpu` - CPU client binary for aarch64
          - `cpud` - CPU daemon binary for aarch64
          - `BUILD_INFO.txt` - Build information and usage notes
          - `*.sha256` - SHA256 checksums for verification
          
          ### Archive
          - `cpu-binaries-aarch64-${{ env.CPU_VERSION }}.tar.gz` - Complete archive with all binaries
          - `cpu-binaries-aarch64-${{ env.CPU_VERSION }}.tar.gz.sha256` - Archive checksum
          
          ## Installation
          
          ### Download individual binaries:
          ```bash
          # Download binaries
          wget https://github.com/${{ github.repository }}/releases/download/${{ github.event.inputs.release_tag || github.ref_name }}/cpu
          wget https://github.com/${{ github.repository }}/releases/download/${{ github.event.inputs.release_tag || github.ref_name }}/cpud
          
          # Make executable
          chmod +x cpu cpud
          
          # Verify (optional)
          wget https://github.com/${{ github.repository }}/releases/download/${{ github.event.inputs.release_tag || github.ref_name }}/cpu.sha256
          wget https://github.com/${{ github.repository }}/releases/download/${{ github.event.inputs.release_tag || github.ref_name }}/cpud.sha256
          sha256sum -c cpu.sha256
          sha256sum -c cpud.sha256
          ```
          
          ### Download complete archive:
          ```bash
          # Download and verify archive
          wget https://github.com/${{ github.repository }}/releases/download/${{ github.event.inputs.release_tag || github.ref_name }}/cpu-binaries-aarch64-${{ env.CPU_VERSION }}.tar.gz
          wget https://github.com/${{ github.repository }}/releases/download/${{ github.event.inputs.release_tag || github.ref_name }}/cpu-binaries-aarch64-${{ env.CPU_VERSION }}.tar.gz.sha256
          sha256sum -c cpu-binaries-aarch64-${{ env.CPU_VERSION }}.tar.gz.sha256
          
          # Extract
          tar -xzf cpu-binaries-aarch64-${{ env.CPU_VERSION }}.tar.gz
          chmod +x cpu cpud
          ```
          
          ## Usage
          ```bash
          ./cpu -h    # Show CPU client help
          ./cpud -h   # Show CPU daemon help
          ```
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
