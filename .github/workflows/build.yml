name: Build CPU Binaries

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      create_release:
        description: 'Create a release after building'
        required: false
        default: false
        type: boolean
      release_tag:
        description: 'Release tag (e.g., v1.0.0)'
        required: false
        type: string
  schedule:
    # Run weekly on Sundays at 00:00 UTC to check for new cpu releases
    - cron: '0 0 * * 0'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'
    
    - name: Build everything using Makefile
      run: |
        echo "Building CPU binaries and initramfs using Makefile..."
        make all
        echo "Build completed successfully!"
    
    - name: Show build summary
      run: |
        echo "=== Build Summary ==="
        ls -la build/binaries/
        echo ""
        echo "Binary info:"
        file build/binaries/cpu build/binaries/cpud
        echo ""
        echo "SSH keys:"
        ls -la build/binaries/identity*
        echo ""
        echo "Initramfs:"
        ls -la build/initramfs/
        echo ""
        echo "Sizes:"
        du -h build/binaries/* build/initramfs/*
        echo ""
        echo "Build info:"
        cat build/binaries/BUILD_INFO.txt
    
    - name: Get CPU version for release naming
      run: |
        cd build/repos/cpu
        echo "CPU_VERSION=$(git describe --tags --always)" >> $GITHUB_ENV
        echo "Building u-root/cpu version: $(git describe --tags --always)"
    
    - name: Create checksums
      run: |
        cd build/binaries
        echo "Creating checksums..."
        sha256sum cpu > cpu.sha256
        sha256sum cpud > cpud.sha256
        sha256sum identity > identity.sha256
        sha256sum identity.pub > identity.pub.sha256
        sha256sum BUILD_INFO.txt > BUILD_INFO.txt.sha256
        cd ../initramfs
        sha256sum cpud-initramfs.cpio.gz > cpud-initramfs.cpio.gz.sha256
        cd ../binaries
        echo "Checksums created:"
        cat *.sha256
        echo "Initramfs checksum:"
        cat ../initramfs/*.sha256
    
    - name: Create tarball
      run: |
        cd build/binaries
        cp ../initramfs/cpud-initramfs.cpio.gz .
        cp ../initramfs/cpud-initramfs.cpio.gz.sha256 .
        tar -czf ../../cpu-binaries-aarch64-${{ env.CPU_VERSION }}.tar.gz *
        cd ../..
        echo "Tarball created:"
        ls -la cpu-binaries-aarch64-*.tar.gz
        sha256sum cpu-binaries-aarch64-*.tar.gz > cpu-binaries-aarch64-${{ env.CPU_VERSION }}.tar.gz.sha256
    
    - name: Upload binaries as artifact
      uses: actions/upload-artifact@v4
      with:
        name: cpu-binaries-aarch64-${{ env.CPU_VERSION }}
        path: |
          build/binaries/
          build/initramfs/
          cpu-binaries-aarch64-*.tar.gz
          cpu-binaries-aarch64-*.tar.gz.sha256
        retention-days: 90
    
    - name: Create release (manual or on tag)
      if: startsWith(github.ref, 'refs/tags/') || github.event.inputs.create_release == 'true'
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ github.event.inputs.release_tag || github.ref_name }}
        name: CPU Binaries ${{ github.event.inputs.release_tag || github.ref_name }}
        files: |
          build/binaries/cpu
          build/binaries/cpud
          build/binaries/identity
          build/binaries/identity.pub
          build/binaries/BUILD_INFO.txt
          build/binaries/cpu.sha256
          build/binaries/cpud.sha256
          build/binaries/identity.sha256
          build/binaries/identity.pub.sha256
          build/binaries/BUILD_INFO.txt.sha256
          build/binaries/cpud-initramfs.cpio.gz
          build/binaries/cpud-initramfs.cpio.gz.sha256
          cpu-binaries-aarch64-${{ env.CPU_VERSION }}.tar.gz
          cpu-binaries-aarch64-${{ env.CPU_VERSION }}.tar.gz.sha256
        body: |
          # CPU Binaries for aarch64 (ARM64)
          
          Built from [u-root/cpu](https://github.com/u-root/cpu) version: `${{ env.CPU_VERSION }}`
          
          ## Files
          
          ### Individual Binaries
          - `cpu` - CPU client binary for aarch64
          - `cpud` - CPU daemon binary for aarch64
          - `BUILD_INFO.txt` - Build information and usage notes
          - `*.sha256` - SHA256 checksums for verification
          
          ### SSH Keys
          - `identity` - Default SSH private key
          - `identity.pub` - Default SSH public key (also embedded in initramfs)
          - `identity.sha256` - Private key checksum
          - `identity.pub.sha256` - Public key checksum
          
          **⚠️ WARNING**: These are default keys for convenience. Generate your own keys for production use!
          
          ### Initramfs
          - `cpud-initramfs.cpio.gz` - U-root initramfs with cpud as init
          - `cpud-initramfs.cpio.gz.sha256` - Initramfs checksum
          
          The initramfs includes the SSH public key at `/etc/identity.pub` and cpud automatically uses it for authentication.
          
          ### Archive
          - `cpu-binaries-aarch64-${{ env.CPU_VERSION }}.tar.gz` - Complete archive with all binaries
          - `cpu-binaries-aarch64-${{ env.CPU_VERSION }}.tar.gz.sha256` - Archive checksum
          
          ## Usage
          
          Download and use the complete archive, or individual binaries as needed.
          Use the initramfs with Linux kernel (boot parameters: init=/init).
          SSH public key is embedded at /etc/identity.pub for automatic authentication.
        draft: false
        prerelease: false
        make_latest: true
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
